USE [GD1C2023]
GO

--drop schema locke
--Drop procedure migrardatos

CREATE SCHEMA [LOCKE]
GO

USE [GD1C2023]
GO


CREATE PROCEDURE MigrarDatos
AS
BEGIN
--1. Hacemos la creacion del esquema
-----------------------------------------------------------------
--2 Hacemos creacion de las Tablas
/****** Object:  Table [gd_esquema].[Maestra]    Script Date: 23/04/2023 22:46:13 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
CREATE TABLE [LOCKE].[USUARIO](
	[USUA_ID] INT IDENTITY(1,1) PRIMARY KEY,
	[USUA_NOMBRE] NVARCHAR(255) NOT NULL,
	[USUA_APELLIDO] NVARCHAR(255) NOT NULL,
	[USUA_DNI] DECIMAL(18,0) NOT NULL,
	[USUA_FECHA_REGISTRO] DATETIME2(3) NOT NULL,
	[USUA_TELEFONO] DECIMAL(18,0) NOT NULL,
	[USUA_MAIL] NVARCHAR(255) NOT NULL,
	[USUA_FECHA_NACIMIENTO] DATE NOT NULL)


CREATE TABLE [LOCKE].LOCALIDAD (
	[LOCA_LOCALIDAD] NVARCHAR(255) PRIMARY KEY
)

CREATE TABLE [LOCKE].[DIRECCION_USUARIO](
	[DIRE_NOMBRE] NVARCHAR(50) NOT NULL,
	[DIRE_USUARIO] INT NOT NULL, 
	[DIRE_DIRECCION] NVARCHAR(255) NOT NULL,
	[DIRE_LOCALIDAD] NVARCHAR(255) NOT NULL,
	[DIRE_PROVINCIA] NVARCHAR(255) NOT NULL
)

CREATE TABLE [LOCKE].[CUPON] (
	[CUPO_NRO] DECIMAL(18,0) NOT NULL PRIMARY KEY,
	[CUPO_USUARIO] INT NOT NULL,
	[CUPO_MONTO] DECIMAL(18,2) NOT NULL CHECK (CUPO_MONTO > 0) ,
	[CUPO_FECHA_ALTA] DATETIME NOT NULL,
	[CUPO_FECHA_VENCIMIENTO] DATETIME NOT NULL,
	[CUPO_TIPO] NVARCHAR(50) NOT NULL
)

CREATE TABLE [LOCKE].[CUPON_RECLAMO] (
	[CUPO_RECL_CUPON] DECIMAL(18,0) NOT NULL PRIMARY KEY,
	[CUPO_RECL_RECLAMO] DECIMAL(18,0) NOT NULL,
	[CUPO_RECL_USUARIO] INT NOT NULL,
	[CUPO_RECL_MONTO] DECIMAL(18,2) NOT NULL CHECK (CUPO_RECL_MONTO > 0) ,
	[CUPO_RECL_FECHA_ALTA] DATETIME NOT NULL,
	[CUPO_RECL_FECHA_VENCIMIENTO] DATETIME NOT NULL,
	[CUPO_RECL_TIPO] NVARCHAR(50) NOT NULL
)

CREATE TABLE [LOCKE].[TIPO_CUPON] (
	[TIPO_CUPON] NVARCHAR(50) NOT NULL PRIMARY KEY
)

CREATE TABLE [LOCKE].[CUPON_PEDIDO] (
	[CUPO_PEDI_CUPON] DECIMAL(18,0) NOT NULL,
	[CUPO_PEDI_PEDIDO] DECIMAL(18,0) NOT NULL
)

CREATE TABLE [LOCKE].[CUPON_RECLAMO_PEDIDO] (
	[CUPO_RECL_PEDI_CUPON] DECIMAL(18,0) NOT NULL,
	[CUPO_RECL_PEDI_RECLAMO] DECIMAL(18,0) NOT NULL,
	[CUPO_RECL_PEDI_PEDIDO] DECIMAL(18,0) NOT NULL
)


CREATE TABLE [LOCKE].[RECLAMO] (
	[RECL_NRO] DECIMAL(18,0) NOT NULL PRIMARY KEY,
	[RECL_USUARIO] INT NOT NULL,
	[RECL_PEDIDO] DECIMAL(18,0) NOT NULL,
	[RECL_FECHA] DATETIME NOT NULL,
	[RECL_DESCRIPCION] NVARCHAR(255),
	[RECL_FECHA_SOLUCION] DATETIME,
	[RECL_SOLUCION] NVARCHAR(255),
	[RECL_CALIFICACION] DECIMAL(18,0) CHECK (RECL_CALIFICACION BETWEEN 1 AND 5),
	[RECL_TIPO] NVARCHAR(50) NOT NULL,
	[RECL_ESTADO] NVARCHAR(50) NOT NULL,
	RECL_OPERADOR INT NOT NULL
)



CREATE TABLE [LOCKE].[ESTADO_RECLAMO] (
	[ESTA_RECL_ESTADO] NVARCHAR(50) NOT NULL PRIMARY KEY
)


CREATE TABLE [LOCKE].[TIPO_RECLAMO] (
	[TIPO_RECL_TIPO] NVARCHAR(50) PRIMARY KEY 
)

CREATE TABLE [LOCKE].[OPERADOR_RECLAMO](
	[OPER_ID] INT IDENTITY(1,1) PRIMARY KEY,
	[OPER_NOMBRE] NVARCHAR(255) NOT NULL,
	[OPER_APELLIDO] NVARCHAR(255) NOT NULL,
	[OPER_DNI] DECIMAL(18,0) NOT NULL,
	[OPER_DIRECCION] NVARCHAR(255) NOT NULL,
	[OPER_TELEFONO] DECIMAL(18,0) NOT NULL,
	[OPER_MAIL] NVARCHAR(255) NOT NULL,
	[OPER_FECHA_NACIMIENTO] DATE NOT NULL
)

CREATE TABLE [LOCKE].[PEDIDO] (
	[PEDI_NRO] DECIMAL(18,0) NOT NULL PRIMARY KEY,
	[PEDI_TOTAL_PRODUCTOS] DECIMAL(18,2) NOT NULL CHECK(PEDI_TOTAL_PRODUCTOS > 0),
	[PEDI_PRECIO_ENVIO] DECIMAL(18,2) NOT NULL CHECK(PEDI_PRECIO_ENVIO >= 0),
	[PEDI_TARIFA_SERVICIO] DECIMAL(18,2) NOT NULL CHECK(PEDI_TARIFA_SERVICIO >= 0),
	[PEDI_PROPINA] DECIMAL(18,2) CHECK(PEDI_PROPINA >= 0),
	[PEDI_TOTAL_CUPONES] DECIMAL(18,2) CHECK(PEDI_TOTAL_CUPONES >= 0),
	[PEDI_TOTAL_SERVICIO] DECIMAL(18,2) ,
	[PEDI_OBSERVACIONES] NVARCHAR(255),
	[PEDI_FECHA] DATETIME NOT NULL,
	[PEDI_FECHA_ENTREGA] DATETIME,
	[PEDI_TIEMPO_ESTIMADO] DECIMAL(18,2) NOT NULL CHECK(PEDI_TIEMPO_ESTIMADO >= 0),
	[PEDI_CALIFICACION] DECIMAL(18,0) CHECK (PEDI_CALIFICACION BETWEEN 1 AND 5),
	[PEDI_DIRE_NOMBRE] NVARCHAR(50) NOT NULL,
	--ACA ARRANCAN LAS FK
	[PEDI_USUARIO] INT NOT NULL,
	[PEDI_LOCAL] NVARCHAR(100) NOT NULL,
	[PEDI_REPARTIDOR] INT NOT NULL,
	[PEDI_MEDIO_DE_PAGO] NVARCHAR(50) NOT NULL,
	[PEDI_ESTADO] NVARCHAR(50) NOT NULL
)


CREATE TABLE [LOCKE].[ESTADO_PEDIDO] (
	[ESTA_PEDI_ESTADO] NVARCHAR(50) NOT NULL PRIMARY KEY
)


CREATE TABLE [LOCKE].[ITEM_PEDIDO] (
	[ITEM_PEDIDO_NRO] DECIMAL(18,0) NOT NULL,
	[ITEM_PRODUCTO] NVARCHAR(50) NOT NULL,
	[ITEM_LOCAL] NVARCHAR(100) NOT NULL,
	[ITEM_CANTIDAD] DECIMAL(18,0) NOT NULL CHECK (ITEM_CANTIDAD > 0),
	[ITEM_PRECIO_UNITARIO] DECIMAL(18,2) NOT NULL CHECK (ITEM_PRECIO_UNITARIO > 0)
)--AGREGAR CHECKS PARA CANTIDAD Y PRECIO UNITARIO > 0


CREATE TABLE [LOCKE].[PRODUCTO_LOCAL] (
	[PROD_CODIGO] NVARCHAR(50) NOT NULL,
	[PROD_LOCAL] NVARCHAR(100) NOT NULL,
	[PROD_NOMBRE] NVARCHAR(50) NOT NULL,
	[PROD_DESCRIPCION] NVARCHAR(255),
	[PROD_PRECIO_UNITARIO] DECIMAL(18,2) CHECK (PROD_PRECIO_UNITARIO > 0)
)
--AGREGAR CHECKS PARA PRECIO UNITARIO > 0

CREATE TABLE [LOCKE].[MEDIO_DE_PAGO] (
	[MEDI_NRO_TARJETA] NVARCHAR(50) NOT NULL,
	[MEDI_USUARIO] INT NOT NULL,
	[MEDI_TIPO] NVARCHAR(50) NOT NULL,
	[MEDI_MARCA_TARJETA] NVARCHAR(100),
)

CREATE TABLE [LOCKE].[TIPO_MEDIO_PAGO] (
	[TIPO_MEDI_PAGO] NVARCHAR(50) NOT NULL PRIMARY KEY
)

CREATE TABLE [LOCKE].[ENVIO_MENSAJERIA](
	[ENVI_NRO] DECIMAL(18,0) NOT NULL PRIMARY KEY, 
	[ENVI_DIR_ORIG] NVARCHAR(255) NOT NULL,
	[ENVI_DIR_DEST] NVARCHAR(255) NOT NULL,
	[ENVI_LOCALIDAD] NVARCHAR(255) NOT NULL,
	[ENVI_PROVINCIA] NVARCHAR(255) NOT NULL,
	[ENVI_KM] DECIMAL(18,2) NOT NULL CHECK (ENVI_KM >= 0),
	[ENVI_VALOR_ASEGURADO] DECIMAL(18,2) CHECK (ENVI_VALOR_ASEGURADO >= 0),
	[ENVI_PRECIO_ENVIO] DECIMAL(18,2) NOT NULL CHECK (ENVI_PRECIO_ENVIO > 0),
	[ENVI_PRECIO_SEGURO] DECIMAL(18,2) CHECK (ENVI_PRECIO_SEGURO >= 0),
	[ENVI_PROPINA] DECIMAL(18,2) CHECK (ENVI_PROPINA >= 0),
	[ENVI_TOTAL] DECIMAL(18,2) NOT NULL CHECK (ENVI_TOTAL >= 0),
	[ENVI_OBSERV] NVARCHAR(255),
	[ENVI_FECHA] DATETIME NOT NULL,
	[ENVI_FECHA_ENTREGA] DATETIME,
	[ENVI_TIEMPO_ESTIMADO] DECIMAL(18,2) NOT NULL CHECK (ENVI_TIEMPO_ESTIMADO > 0),
	[ENVI_CALIFICACION]  DECIMAL(18,0) CHECK (ENVI_CALIFICACION BETWEEN 1 AND 5),
	--ACA COMIENZAN LAS FK
	[ENVI_REPARTIDOR] INT NOT NULL,
	[ENVI_USUARIO] INT NOT NULL,
	[ENVI_MEDIO_PAGO] NVARCHAR(50) NOT NULL,
	[ENVI_ESTADO] NVARCHAR(50) NOT NULL
)


CREATE TABLE [LOCKE].[ESTADO_ENVIO_MENSAJERIA] (
	[ESTA_ENVI_ESTADO] NVARCHAR(50) NOT NULL PRIMARY KEY
)



CREATE TABLE [LOCKE].[PAQUETE] (
	[PAQU_ENVIO] DECIMAL(18,0) NOT NULL PRIMARY KEY,
	[PAQU_TIPO] NVARCHAR(50) NOT NULL
)

CREATE TABLE [LOCKE].[TIPO_PAQUETE] (
	[PAQU_TIPO_TIPO] NVARCHAR(50) NOT NULL PRIMARY KEY,
	[PAQU_TIPO_ALTO_MAX] DECIMAL(18,2) NOT NULL CHECK (PAQU_TIPO_ALTO_MAX > 0) ,
	[PAQU_TIPO_ANCHO_MAX] DECIMAL(18,2) NOT NULL CHECK (PAQU_TIPO_ANCHO_MAX > 0) ,
	[PAQU_TIPO_LARGO_MAX] DECIMAL(18,2) NOT NULL CHECK (PAQU_TIPO_LARGO_MAX > 0) ,
	[PAQU_TIPO_PESO_MAX] DECIMAL(18,2) NOT NULL CHECK (PAQU_TIPO_PESO_MAX > 0) ,
	[PAQU_TIPO_PRECIO] DECIMAL(18,2) NOT NULL CHECK (PAQU_TIPO_PRECIO > 0) ,
)

CREATE TABLE [LOCKE].[REPARTIDOR] (
	[REPA_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	[REPA_NOMBRE] NVARCHAR(255) NOT NULL,
	[REPA_APELLIDO] NVARCHAR(255) NOT NULL,
	[REPA_DNI] DECIMAL(18,0) NOT NULL,
	[REPA_DIRECCION] NVARCHAR(255) NOT NULL,
	[REPA_TELEFONO] DECIMAL(18,0) NOT NULL,
	[REPA_MAIL] NVARCHAR(255) NOT NULL,
	[REPA_FECHA_NACIMIENTO] DATE NOT NULL,
	[REPA_TIPO_MOVILIDAD] NVARCHAR(50) NOT NULL
)



CREATE TABLE [LOCKE].[TIPO_MOVILIDAD] (
	[TIPO_MOVILIDAD] NVARCHAR(50) NOT NULL PRIMARY KEY
)

CREATE TABLE [LOCKE].[LOCALIDAD_REPARTIDOR] (
	[LOCA_REPA_LOCALIDAD] NVARCHAR(255) NOT NULL,
	[LOCA_REPA_REPARTIDOR] INT NOT NULL
)



CREATE TABLE [LOCKE].[LOCAL] (
	[LOCAL_NOMBRE] NVARCHAR(100) NOT NULL PRIMARY KEY,
	[LOCAL_TIPO] NVARCHAR(50) NOT NULL,
	[LOCAL_CATEGORIA] NVARCHAR(255) NOT NULL,
	[LOCAL_DESCRIPCION] NVARCHAR(255),
	[LOCAL_DIRECCION] NVARCHAR(255) NOT NULL,
	[LOCAL_LOCALIDAD] NVARCHAR(255) NOT NULL,
	[LOCAL_PROVINCIA] NVARCHAR(255) NOT NULL,
)


CREATE TABLE [LOCKE].[CATEGORIA_LOCAL] (
	[CATE_CATEGORIA] NVARCHAR(255) NOT NULL PRIMARY KEY
)

CREATE TABLE [LOCKE].[HORARIO_LOCAL] (
	[HORA_LOCAL] NVARCHAR(100) NOT NULL,
	[HORA_DIA] NVARCHAR(50) NOT NULL,
	[HORA_APERTURA] DECIMAL(18,0) NOT NULL,
	[HORA_CIERRE] DECIMAL(18,0) NOT NULL 
)

CREATE TABLE [LOCKE].[TIPO_LOCAL] (
	[TIPO_LOCAL] NVARCHAR(50) NOT NULL PRIMARY KEY
)

----------------------------------------------------------------------------
--3. Agregamos las PKS a las tablas 
ALTER TABLE [LOCKE].[DIRECCION_USUARIO]
ADD PRIMARY KEY (DIRE_NOMBRE,DIRE_USUARIO);

ALTER TABLE [LOCKE].[CUPON_PEDIDO]
ADD PRIMARY KEY (CUPO_PEDI_CUPON,CUPO_PEDI_PEDIDO)

--ALTER TABLE [LOCKE].[CUPON_RECLAMO]
--ADD PRIMARY KEY (CUPO_RECL_CUPON,CUPO_RECL_RECLAMO)

ALTER TABLE [LOCKE].[ITEM_PEDIDO]
ADD PRIMARY KEY(ITEM_PEDIDO_NRO,ITEM_PRODUCTO,ITEM_LOCAL)

ALTER TABLE [LOCKE].[MEDIO_DE_PAGO]
ADD CONSTRAINT PK_MEDIO_DE_PAGO PRIMARY KEY(MEDI_NRO_TARJETA)

ALTER TABLE [LOCKE].[LOCALIDAD_REPARTIDOR]
ADD PRIMARY KEY(LOCA_REPA_LOCALIDAD,LOCA_REPA_REPARTIDOR)

ALTER TABLE LOCKE.HORARIO_LOCAL
ADD PRIMARY KEY(HORA_LOCAL,HORA_DIA,HORA_APERTURA)

ALTER TABLE LOCKE.PRODUCTO_LOCAL
ADD PRIMARY KEY(PROD_CODIGO,PROD_LOCAL)

ALTER TABLE LOCKE.CUPON_RECLAMO_PEDIDO
ADD PRIMARY KEY (CUPO_RECL_PEDI_CUPON,CUPO_RECL_PEDI_RECLAMO,CUPO_RECL_PEDI_PEDIDO)

-----------------------------------------FKS-----------------------------------------------------------

ALTER TABLE [LOCKE].[DIRECCION_USUARIO]
ADD FOREIGN KEY (DIRE_USUARIO) REFERENCES [LOCKE].[USUARIO](USUA_ID)

ALTER TABLE [LOCKE].[DIRECCION_USUARIO]
ADD FOREIGN KEY (DIRE_LOCALIDAD) REFERENCES [LOCKE].[LOCALIDAD](LOCA_LOCALIDAD)

ALTER TABLE [LOCKE].[CUPON]
ADD FOREIGN KEY (CUPO_USUARIO) REFERENCES [LOCKE].[USUARIO](USUA_ID)

ALTER TABLE [LOCKE].[CUPON]
ADD FOREIGN KEY (CUPO_TIPO) REFERENCES [LOCKE].[TIPO_CUPON](TIPO_CUPON)

ALTER TABLE [LOCKE].[CUPON_PEDIDO]
ADD FOREIGN KEY (CUPO_PEDI_PEDIDO) REFERENCES [LOCKE].[PEDIDO](PEDI_NRO)

ALTER TABLE [LOCKE].[CUPON_PEDIDO]
ADD FOREIGN KEY (CUPO_PEDI_CUPON) REFERENCES [LOCKE].[CUPON](CUPO_NRO)

ALTER TABLE [LOCKE].[CUPON_RECLAMO]
ADD FOREIGN KEY (CUPO_RECL_RECLAMO) REFERENCES [LOCKE].[RECLAMO](RECL_NRO)

ALTER TABLE [LOCKE].[CUPON_RECLAMO]
ADD FOREIGN KEY (CUPO_RECL_USUARIO) REFERENCES [LOCKE].[USUARIO](USUA_ID)

ALTER TABLE [LOCKE].[CUPON_RECLAMO]
ADD FOREIGN KEY (CUPO_RECL_TIPO) REFERENCES [LOCKE].[TIPO_CUPON](TIPO_CUPON)

ALTER TABLE [LOCKE].[CUPON_RECLAMO_PEDIDO]
ADD FOREIGN KEY (CUPO_RECL_PEDI_CUPON) REFERENCES [LOCKE].[CUPON_RECLAMO](CUPO_RECL_CUPON)

ALTER TABLE [LOCKE].[CUPON_RECLAMO_PEDIDO]
ADD FOREIGN KEY (CUPO_RECL_PEDI_RECLAMO) REFERENCES [LOCKE].[RECLAMO](RECL_NRO)

ALTER TABLE [LOCKE].[CUPON_RECLAMO_PEDIDO]
ADD FOREIGN KEY (CUPO_RECL_PEDI_PEDIDO) REFERENCES [LOCKE].[PEDIDO](PEDI_NRO)

ALTER TABLE [LOCKE].[RECLAMO]
ADD FOREIGN KEY (RECL_USUARIO) REFERENCES [LOCKE].[USUARIO](USUA_ID)

ALTER TABLE [LOCKE].[RECLAMO]
ADD FOREIGN KEY (RECL_PEDIDO) REFERENCES [LOCKE].[PEDIDO](PEDI_NRO)

ALTER TABLE [LOCKE].[RECLAMO]
ADD FOREIGN KEY (RECL_TIPO) REFERENCES [LOCKE].[TIPO_RECLAMO](TIPO_RECL_TIPO)

ALTER TABLE [LOCKE].[RECLAMO]
ADD FOREIGN KEY (RECL_ESTADO) REFERENCES [LOCKE].[ESTADO_RECLAMO](ESTA_RECL_ESTADO)

ALTER TABLE LOCKE.RECLAMO
ADD FOREIGN KEY (RECL_OPERADOR) REFERENCES LOCKE.OPERADOR_RECLAMO (OPER_ID)


ALTER TABLE [LOCKE].[PEDIDO]
ADD FOREIGN KEY (PEDI_USUARIO) REFERENCES [LOCKE].[USUARIO](USUA_ID)

ALTER TABLE [LOCKE].[PEDIDO]
ADD FOREIGN KEY (PEDI_LOCAL) REFERENCES [LOCKE].[LOCAL](LOCAL_NOMBRE)

ALTER TABLE [LOCKE].[PEDIDO]
ADD FOREIGN KEY (PEDI_REPARTIDOR) REFERENCES [LOCKE].[REPARTIDOR](REPA_ID)

ALTER TABLE [LOCKE].[PEDIDO]
ADD FOREIGN KEY (PEDI_MEDIO_DE_PAGO) REFERENCES [LOCKE].[MEDIO_DE_PAGO](MEDI_NRO_TARJETA)

ALTER TABLE [LOCKE].[PEDIDO]
ADD FOREIGN KEY (PEDI_ESTADO) REFERENCES [LOCKE].[ESTADO_PEDIDO](ESTA_PEDI_ESTADO)

ALTER TABLE [LOCKE].[ITEM_PEDIDO]
ADD FOREIGN KEY(ITEM_PEDIDO_NRO) REFERENCES [LOCKE].[PEDIDO](PEDI_NRO)

ALTER TABLE [LOCKE].[ITEM_PEDIDO]
ADD FOREIGN KEY(ITEM_PRODUCTO,ITEM_LOCAL) REFERENCES [LOCKE].[PRODUCTO_LOCAL](PROD_CODIGO,PROD_LOCAL)

ALTER TABLE [LOCKE].[PRODUCTO_LOCAL]
ADD FOREIGN KEY(PROD_LOCAL) REFERENCES [LOCKE].[LOCAL](LOCAL_NOMBRE)

ALTER TABLE [LOCKE].[ENVIO_MENSAJERIA]
ADD FOREIGN KEY (ENVI_REPARTIDOR) REFERENCES [LOCKE].[REPARTIDOR](REPA_ID)

ALTER TABLE [LOCKE].[ENVIO_MENSAJERIA]
ADD FOREIGN KEY (ENVI_USUARIO) REFERENCES [LOCKE].[USUARIO](USUA_ID)

ALTER TABLE [LOCKE].[ENVIO_MENSAJERIA]
ADD FOREIGN KEY (ENVI_MEDIO_PAGO) REFERENCES [LOCKE].[MEDIO_DE_PAGO](MEDI_NRO_TARJETA)

ALTER TABLE [LOCKE].[ENVIO_MENSAJERIA]
ADD FOREIGN KEY (ENVI_ESTADO) REFERENCES [LOCKE].[ESTADO_ENVIO_MENSAJERIA](ESTA_ENVI_ESTADO)

ALTER TABLE [LOCKE].[PAQUETE]
ADD FOREIGN KEY (PAQU_ENVIO) REFERENCES [LOCKE].[ENVIO_MENSAJERIA](ENVI_NRO)

ALTER TABLE [LOCKE].[PAQUETE]
ADD FOREIGN KEY (PAQU_TIPO) REFERENCES [LOCKE].[TIPO_PAQUETE](PAQU_TIPO_TIPO)

ALTER TABLE [LOCKE].[REPARTIDOR]
ADD FOREIGN KEY (REPA_TIPO_MOVILIDAD) REFERENCES [LOCKE].[TIPO_MOVILIDAD](TIPO_MOVILIDAD)

ALTER TABLE [LOCKE].[LOCALIDAD_REPARTIDOR]
ADD FOREIGN KEY(LOCA_REPA_LOCALIDAD) REFERENCES [LOCKE].[LOCALIDAD](LOCA_LOCALIDAD)

ALTER TABLE [LOCKE].[LOCALIDAD_REPARTIDOR]
ADD FOREIGN KEY(LOCA_REPA_REPARTIDOR) REFERENCES [LOCKE].[REPARTIDOR](REPA_ID)

ALTER TABLE [LOCKE].[LOCAL]
ADD FOREIGN KEY(LOCAL_TIPO) REFERENCES [LOCKE].[TIPO_LOCAL](TIPO_LOCAL)

ALTER TABLE [LOCKE].[LOCAL]
ADD FOREIGN KEY(LOCAL_CATEGORIA) REFERENCES [LOCKE].[CATEGORIA_LOCAL](CATE_CATEGORIA)

ALTER TABLE [LOCKE].[LOCAL]
ADD FOREIGN KEY(LOCAL_LOCALIDAD) REFERENCES [LOCKE].[LOCALIDAD](LOCA_LOCALIDAD)

ALTER TABLE [LOCKE].[HORARIO_LOCAL]
ADD FOREIGN KEY(HORA_LOCAL) REFERENCES [LOCKE].[LOCAL](LOCAL_NOMBRE)

ALTER TABLE [LOCKE].[MEDIO_DE_PAGO]
ADD FOREIGN KEY(MEDI_TIPO) REFERENCES [LOCKE].[TIPO_MEDIO_PAGO](TIPO_MEDI_PAGO)



----------------------------------------------------CONSTRAINTS------------------------------------------------------------------

ALTER TABLE LOCKE.CUPON
ADD CONSTRAINT CHECK_FECHA CHECK (CUPO_FECHA_VENCIMIENTO > CUPO_FECHA_ALTA )

ALTER TABLE LOCKE.RECLAMO
ADD CONSTRAINT CHRECL_FECHA CHECK (RECL_FECHA_SOLUCION > RECL_FECHA)

--ALTER TABLE LOCKE.ENVIO_MENSAJERIA
--ADD CONSTRAINT CHENVI_FECHA CHECK (ENVI_FECHA_ENTREGA > ENVI_FECHA) tuvimos que eliminar este check debido a que en la tabla maestra habia datos incorrectos. Ya que la fecha de entrega < fecha

--ALTER TABLE LOCKE.ENVIO_MENSAJERIA
--DROP CONSTRAINT CHENVI_FECHA 

ALTER TABLE LOCKE.PEDIDO
ADD CONSTRAINT CHPEDI_FECHA CHECK (PEDI_FECHA_ENTREGA > PEDI_FECHA)

ALTER TABLE LOCKE.HORARIO_LOCAL
ADD CONSTRAINT CH_HORA_DIA CHECK (HORA_DIA = 'Lunes' or HORA_DIA = 'Martes' or HORA_DIA = 'Miercoles' or HORA_DIA = 'Jueves' or HORA_DIA = 'Viernes' or HORA_DIA = 'Sabado' or  HORA_DIA = 'Domingo')

ALTER TABLE LOCKE.HORARIO_LOCAL
ADD CONSTRAINT CH_HORA_HORARIOS CHECK (HORA_CIERRE > HORA_APERTURA)

------------------------------------------MODIFICACIONES TABLAS

ALTER TABLE LOCKE.OPERADOR_RECLAMO
ALTER COLUMN OPER_MAIL NVARCHAR(255) --TUVIMOS QUE REALIZAR ESTA MODIFICACION POR LOS DATOS DE LA TABLA MAESTRA

ALTER TABLE LOCKE.LOCAL
ALTER COLUMN LOCAL_CATEGORIA NVARCHAR(255) --Ya que las categorias todavia no estan cargadas en la tabla, entonces tenemos que permitir null

--ALTER TABLE LOCKE.PEDIDO
--ADD CONSTRAINT CK_PEDI_TOTAL_SERVICIO  CHECK(PEDI_TOTAL_SERVICIO >= 0)  --tuvimos que eliminar este check debido a que en la tabla maestra tenemos algunos pedidos que su total es negativo

--ALTER TABLE LOCKE.ENVIO_MENSAJERIA
--ADD CONSTRAINT CK_ENVIO_KM CHECK (ENVI_KM >= 0)

-------------------------------------------CREACION DE INDICES
CREATE INDEX IDX_Codigo_Nombre ON LOCKE.PRODUCTO_LOCAL (PROD_CODIGO,PROD_LOCAL)
CREATE INDEX IDX_Local_Dia_HApertura ON LOCKE.HORARIO_LOCAL (HORA_LOCAL,HORA_DIA,HORA_APERTURA)
CREATE INDEX IDX_Pedido_Producto_Local ON LOCKE.ITEM_PEDIDO (ITEM_PEDIDO_NRO, ITEM_PRODUCTO, ITEM_LOCAL)
CREATE INDEX IDX_Nombre_Usuario ON LOCKE.DIRECCION_USUARIO(DIRE_USUARIO,DIRE_NOMBRE)
CREATE INDEX IDX_Pedido_Usuario ON LOCKE.PEDIDO(PEDI_NRO,PEDI_USUARIO)
CREATE INDEX IDX_Envio_Usuario ON LOCKE.ENVIO_MENSAJERIA (ENVI_NRO,ENVI_USUARIO)
CREATE INDEX IDX_Cupon_Usuario ON LOCKE.CUPON (CUPO_NRO, CUPO_USUARIO)
CREATE INDEX IDX_CuponRecl_Usuario ON LOCKE.CUPON_RECLAMO (CUPO_RECL_CUPON,CUPO_RECL_USUARIO)
CREATE INDEX IDX_Reclamo_Pedido ON LOCKE.RECLAMO (RECL_NRO,RECL_PEDIDO)
CREATE INDEX IDX_Pedido_Repartidor ON LOCKE.PEDIDO (PEDI_NRO, PEDI_REPARTIDOR)
CREATE INDEX IDX_Envio_Repartidor ON LOCKE.ENVIO_MENSAJERIA (ENVI_NRO,ENVI_REPARTIDOR);

--------------------------------------------CREACION DEL STORED PROCEDURE

	--USUARIO
	INSERT INTO LOCKE.USUARIO (USUA_NOMBRE, USUA_APELLIDO, USUA_DNI, USUA_FECHA_REGISTRO, USUA_TELEFONO, USUA_MAIL, USUA_FECHA_NACIMIENTO)
	(SELECT USUARIO_NOMBRE, USUARIO_APELLIDO, USUARIO_DNI, USUARIO_FECHA_REGISTRO, USUARIO_TELEFONO, USUARIO_MAIL, USUARIO_FECHA_NAC
	FROM gd_esquema.Maestra
	GROUP BY USUARIO_NOMBRE, USUARIO_APELLIDO, USUARIO_DNI, USUARIO_FECHA_REGISTRO, USUARIO_TELEFONO, USUARIO_MAIL, USUARIO_FECHA_NAC);

	--TIPO_MOVILIDAD
	INSERT INTO LOCKE.TIPO_MOVILIDAD (TIPO_MOVILIDAD)
	(SELECT DISTINCT REPARTIDOR_TIPO_MOVILIDAD FROM gd_esquema.Maestra);

	--REPARTIDOR
	INSERT INTO LOCKE.REPARTIDOR (REPA_NOMBRE,REPA_APELLIDO,REPA_DNI,REPA_TELEFONO,REPA_DIRECCION,REPA_MAIL,REPA_FECHA_NACIMIENTO,REPA_TIPO_MOVILIDAD)
	(SELECT REPARTIDOR_NOMBRE,REPARTIDOR_APELLIDO,REPARTIDOR_DNI,REPARTIDOR_TELEFONO,REPARTIDOR_DIRECION,REPARTIDOR_EMAIL,REPARTIDOR_FECHA_NAC,REPARTIDOR_TIPO_MOVILIDAD
	FROM gd_esquema.Maestra
	GROUP BY REPARTIDOR_NOMBRE,REPARTIDOR_APELLIDO,REPARTIDOR_DNI,REPARTIDOR_TELEFONO,REPARTIDOR_DIRECION,REPARTIDOR_EMAIL,REPARTIDOR_FECHA_NAC,REPARTIDOR_TIPO_MOVILIDAD);

	--LOCALIDAD
	INSERT INTO LOCKE.LOCALIDAD (LOCA_LOCALIDAD)
	(SELECT ENVIO_MENSAJERIA_LOCALIDAD FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
	UNION
	SELECT DIRECCION_USUARIO_LOCALIDAD FROM gd_esquema.Maestra
	WHERE PEDIDO_NRO IS NOT NULL
	UNION 
	SELECT LOCAL_LOCALIDAD FROM gd_esquema.Maestra
	WHERE PEDIDO_NRO IS NOT NULL)
	ORDER BY 1;

	--LOCALIDAD_REPARTIDOR
	INSERT INTO LOCKE.LOCALIDAD_REPARTIDOR (LOCA_REPA_LOCALIDAD,LOCA_REPA_REPARTIDOR)
	(SELECT LOCAL_LOCALIDAD, (SELECT REPA_ID FROM LOCKE.REPARTIDOR WHERE REPA_DNI = REPARTIDOR_DNI) AS LOCA_REPARTIDOR
	FROM gd_esquema.Maestra 
	WHERE PEDIDO_NRO IS NOT NULL
	UNION 
	SELECT ENVIO_MENSAJERIA_LOCALIDAD, (SELECT REPA_ID FROM LOCKE.REPARTIDOR WHERE REPA_DNI = REPARTIDOR_DNI)
	FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL)
	ORDER BY 2,1;

	--OPERADOR_RECLAMO
		INSERT INTO LOCKE.OPERADOR_RECLAMO (OPER_NOMBRE,OPER_APELLIDO,OPER_DNI,OPER_TELEFONO,OPER_DIRECCION,OPER_FECHA_NACIMIENTO)
	(SELECT OPERADOR_RECLAMO_NOMBRE,OPERADOR_RECLAMO_APELLIDO,OPERADOR_RECLAMO_DNI,OPERADOR_RECLAMO_TELEFONO, OPERADOR_RECLAMO_DIRECCION, OPERADOR_RECLAMO_FECHA_NAC
	FROM gd_esquema.Maestra
	WHERE RECLAMO_NRO IS NOT NULL
	GROUP BY OPERADOR_RECLAMO_NOMBRE,OPERADOR_RECLAMO_APELLIDO,OPERADOR_RECLAMO_DNI,OPERADOR_RECLAMO_TELEFONO, OPERADOR_RECLAMO_DIRECCION, OPERADOR_RECLAMO_FECHA_NAC);

	--TIPO_PAQUETE
		INSERT INTO LOCKE.TIPO_PAQUETE (PAQU_TIPO_TIPO,PAQU_TIPO_ALTO_MAX,PAQU_TIPO_ANCHO_MAX,PAQU_TIPO_LARGO_MAX,PAQU_TIPO_PESO_MAX,PAQU_TIPO_PRECIO)
	(SELECT PAQUETE_TIPO,PAQUETE_ALTO_MAX,PAQUETE_ANCHO_MAX,PAQUETE_LARGO_MAX,PAQUETE_PESO_MAX,PAQUETE_TIPO_PRECIO FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
	GROUP BY PAQUETE_TIPO,PAQUETE_ALTO_MAX,PAQUETE_ANCHO_MAX,PAQUETE_LARGO_MAX,PAQUETE_PESO_MAX,PAQUETE_TIPO_PRECIO);

	--TIPO_LOCAL
		INSERT INTO LOCKE.TIPO_LOCAL(TIPO_LOCAL)
	(SELECT LOCAL_TIPO FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NULL
	GROUP BY LOCAL_TIPO);

	--TIPO_RECLAMO
		INSERT INTO LOCKE.TIPO_RECLAMO(TIPO_RECL_TIPO)
	(SELECT DISTINCT RECLAMO_TIPO FROM gd_esquema.Maestra
	WHERE RECLAMO_NRO IS NOT NULL);

	--TIPO_MEDIO_PAGO
		INSERT INTO LOCKE.TIPO_MEDIO_PAGO(TIPO_MEDI_PAGO)
	(SELECT MEDIO_PAGO_TIPO FROM gd_esquema.Maestra
	GROUP BY MEDIO_PAGO_TIPO);

	--MEDIO_DE_PAGO
		INSERT INTO LOCKE.MEDIO_DE_PAGO(MEDI_NRO_TARJETA,MEDI_TIPO,MEDI_MARCA_TARJETA,MEDI_USUARIO)
	(SELECT distinct MEDIO_PAGO_NRO_TARJETA,MEDIO_PAGO_TIPO,MARCA_TARJETA, (SELECT top 1 USUA_ID FROM LOCKE.USUARIO WHERE USUA_DNI = USUARIO_DNI) AS USUA_ID
	FROM gd_esquema.Maestra);

	--TIPO_CUPON
		INSERT INTO LOCKE.TIPO_CUPON (TIPO_CUPON)
	( SELECT DISTINCT CUPON_TIPO FROM gd_esquema.Maestra WHERE CUPON_NRO IS NOT NULL );

	--CUPON
		INSERT INTO LOCKE.CUPON (CUPO_NRO,CUPO_MONTO,CUPO_FECHA_ALTA,CUPO_FECHA_VENCIMIENTO,CUPO_TIPO,CUPO_USUARIO)
	( SELECT CUPON_NRO,CUPON_MONTO,CUPON_FECHA_ALTA,CUPON_FECHA_VENCIMIENTO,CUPON_TIPO,USUA_ID
	FROM gd_esquema.Maestra JOIN LOCKE.USUARIO ON (USUARIO_DNI = USUA_DNI)
	WHERE CUPON_NRO IS NOT NULL);

	--LOCAL
		INSERT INTO LOCKE.LOCAL (LOCAL_NOMBRE, LOCAL_DESCRIPCION, LOCAL_PROVINCIA, LOCAL_LOCALIDAD, LOCAL_TIPO, LOCAL_DIRECCION)
	( SELECT LOCAL_NOMBRE,LOCAL_DESCRIPCION,LOCAL_PROVINCIA, LOCAL_LOCALIDAD, LOCAL_TIPO, LOCAL_DIRECCION
	FROM gd_esquema.Maestra
	WHERE PEDIDO_NRO IS NOT NULL --AND RECLAMO_NRO IS NULL
	GROUP BY LOCAL_NOMBRE,LOCAL_DESCRIPCION,LOCAL_PROVINCIA, LOCAL_LOCALIDAD, LOCAL_TIPO, LOCAL_DIRECCION);

	--ESTADO ENVIO MENSAJERIA
	INSERT INTO LOCKE.ESTADO_ENVIO_MENSAJERIA (ESTA_ENVI_ESTADO)
	(SELECT DISTINCT ENVIO_MENSAJERIA_ESTADO FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL );

	--ENVIO MENSAJERIA
		INSERT INTO LOCKE.ENVIO_MENSAJERIA (ENVI_NRO, ENVI_DIR_ORIG,ENVI_DIR_DEST,ENVI_LOCALIDAD,ENVI_PROVINCIA,ENVI_KM,ENVI_VALOR_ASEGURADO,ENVI_PRECIO_ENVIO,ENVI_PRECIO_SEGURO,ENVI_PROPINA,ENVI_TOTAL,ENVI_OBSERV,ENVI_FECHA,ENVI_FECHA_ENTREGA,ENVI_TIEMPO_ESTIMADO,ENVI_CALIFICACION,ENVI_REPARTIDOR ,ENVI_USUARIO, ENVI_MEDIO_PAGO, ENVI_ESTADO)
		(SELECT ENVIO_MENSAJERIA_NRO, ENVIO_MENSAJERIA_DIR_ORIG, ENVIO_MENSAJERIA_DIR_DEST, ENVIO_MENSAJERIA_LOCALIDAD, ENVIO_MENSAJERIA_PROVINCIA, ENVIO_MENSAJERIA_KM,ENVIO_MENSAJERIA_VALOR_ASEGURADO,ENVIO_MENSAJERIA_PRECIO_ENVIO, ENVIO_MENSAJERIA_PRECIO_SEGURO, ENVIO_MENSAJERIA_PROPINA, ENVIO_MENSAJERIA_TOTAL, ENVIO_MENSAJERIA_OBSERV, ENVIO_MENSAJERIA_FECHA, ENVIO_MENSAJERIA_FECHA_ENTREGA, ENVIO_MENSAJERIA_TIEMPO_ESTIMADO, ENVIO_MENSAJERIA_CALIFICACION, REPA_ID ,USUA_ID,MEDIO_PAGO_NRO_TARJETA,ENVIO_MENSAJERIA_ESTADO
	FROM gd_esquema.Maestra JOIN LOCKE.REPARTIDOR ON (REPARTIDOR_DNI = REPA_DNI) JOIN  LOCKE.USUARIO ON (USUARIO_DNI = USUA_DNI)
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL AND RECLAMO_NRO IS NULL
	GROUP BY ENVIO_MENSAJERIA_NRO, ENVIO_MENSAJERIA_DIR_ORIG, ENVIO_MENSAJERIA_DIR_DEST, ENVIO_MENSAJERIA_LOCALIDAD, ENVIO_MENSAJERIA_PROVINCIA, ENVIO_MENSAJERIA_KM,ENVIO_MENSAJERIA_VALOR_ASEGURADO,ENVIO_MENSAJERIA_PRECIO_ENVIO, ENVIO_MENSAJERIA_PRECIO_SEGURO, ENVIO_MENSAJERIA_PROPINA, ENVIO_MENSAJERIA_TOTAL, ENVIO_MENSAJERIA_OBSERV, ENVIO_MENSAJERIA_FECHA, ENVIO_MENSAJERIA_FECHA_ENTREGA, ENVIO_MENSAJERIA_TIEMPO_ESTIMADO, ENVIO_MENSAJERIA_CALIFICACION, REPA_ID ,USUA_ID, MEDIO_PAGO_NRO_TARJETA,ENVIO_MENSAJERIA_ESTADO);


	--PAQUETE
		INSERT INTO LOCKE.PAQUETE (PAQU_ENVIO, PAQU_TIPO)
	(SELECT ENVIO_MENSAJERIA_NRO, PAQUETE_TIPO FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL);

	--HORARIO_LOCAL
		INSERT INTO LOCKE.HORARIO_LOCAL (HORA_LOCAL, HORA_DIA, HORA_APERTURA, HORA_CIERRE)
	(SELECT LOCAL_NOMBRE, HORARIO_LOCAL_DIA, HORARIO_LOCAL_HORA_APERTURA, HORARIO_LOCAL_HORA_CIERRE FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NULL
	GROUP BY LOCAL_NOMBRE, HORARIO_LOCAL_DIA, HORARIO_LOCAL_HORA_APERTURA, HORARIO_LOCAL_HORA_CIERRE);

	--DIRECCION_USUARIO
		INSERT INTO LOCKE.DIRECCION_USUARIO (DIRE_NOMBRE, DIRE_DIRECCION, DIRE_LOCALIDAD, DIRE_PROVINCIA, DIRE_USUARIO)
	(SELECT DIRECCION_USUARIO_NOMBRE, DIRECCION_USUARIO_DIRECCION, DIRECCION_USUARIO_LOCALIDAD, DIRECCION_USUARIO_PROVINCIA, USUA_ID
	FROM gd_esquema.Maestra JOIN LOCKE.USUARIO ON (USUARIO_DNI = USUA_DNI)
	WHERE ENVIO_MENSAJERIA_NRO IS NULL AND RECLAMO_NRO IS NULL
	GROUP BY DIRECCION_USUARIO_NOMBRE, DIRECCION_USUARIO_DIRECCION, DIRECCION_USUARIO_LOCALIDAD, DIRECCION_USUARIO_PROVINCIA, USUA_ID);

	--ESTADO PEDIDO
		INSERT INTO LOCKE.ESTADO_PEDIDO (ESTA_PEDI_ESTADO)
	(SELECT DISTINCT PEDIDO_ESTADO FROM gd_esquema.Maestra
	WHERE PEDIDO_NRO IS NOT NULL);

	--PEDIDO
	INSERT INTO LOCKE.PEDIDO (PEDI_NRO, PEDI_TOTAL_PRODUCTOS, PEDI_PRECIO_ENVIO, PEDI_TARIFA_SERVICIO, PEDI_PROPINA, PEDI_TOTAL_CUPONES, PEDI_TOTAL_SERVICIO, PEDI_OBSERVACIONES, PEDI_FECHA, PEDI_FECHA_ENTREGA, PEDI_TIEMPO_ESTIMADO, PEDI_CALIFICACION, PEDI_MEDIO_DE_PAGO, PEDI_DIRE_NOMBRE, PEDI_LOCAL,PEDI_USUARIO, PEDI_REPARTIDOR,PEDI_ESTADO)
	(SELECT PEDIDO_NRO, PEDIDO_TOTAL_PRODUCTOS, PEDIDO_PRECIO_ENVIO, PEDIDO_TARIFA_SERVICIO, PEDIDO_PROPINA, PEDIDO_TOTAL_CUPONES, PEDIDO_TOTAL_SERVICIO, PEDIDO_OBSERV, PEDIDO_FECHA, PEDIDO_FECHA_ENTREGA, PEDIDO_TIEMPO_ESTIMADO_ENTREGA, PEDIDO_CALIFICACION,MEDIO_PAGO_NRO_TARJETA,DIRECCION_USUARIO_NOMBRE, LOCAL_NOMBRE, USUA_ID, REPA_ID,PEDIDO_ESTADO
	FROM gd_esquema.Maestra JOIN LOCKE.USUARIO ON (USUARIO_DNI = USUA_DNI) JOIN LOCKE.REPARTIDOR ON (REPARTIDOR_DNI = REPA_DNI)
	WHERE PEDIDO_NRO IS NOT NULL AND RECLAMO_NRO IS NULL
	GROUP BY PEDIDO_NRO, PEDIDO_TOTAL_PRODUCTOS, PEDIDO_PRECIO_ENVIO, PEDIDO_TARIFA_SERVICIO, PEDIDO_PROPINA, PEDIDO_TOTAL_CUPONES, PEDIDO_TOTAL_SERVICIO, PEDIDO_OBSERV, PEDIDO_FECHA, PEDIDO_FECHA_ENTREGA, PEDIDO_TIEMPO_ESTIMADO_ENTREGA, PEDIDO_CALIFICACION,MEDIO_PAGO_NRO_TARJETA,DIRECCION_USUARIO_NOMBRE,LOCAL_NOMBRE,USUA_ID,REPA_ID,PEDIDO_ESTADO);

	--ESTADO RECLAMO
	INSERT INTO LOCKE.ESTADO_RECLAMO (ESTA_RECL_ESTADO)
	(SELECT DISTINCT RECLAMO_ESTADO FROM gd_esquema.Maestra 
	WHERE RECLAMO_NRO IS NOT NULL);

	--RECLAMO
		INSERT INTO LOCKE.RECLAMO (RECL_NRO,RECL_FECHA,RECL_DESCRIPCION,RECL_FECHA_SOLUCION,RECL_SOLUCION, RECL_CALIFICACION, RECL_TIPO, RECL_PEDIDO, RECL_USUARIO,RECL_ESTADO,RECL_OPERADOR)
	(SELECT RECLAMO_NRO, RECLAMO_FECHA, RECLAMO_DESCRIPCION, RECLAMO_FECHA_SOLUCION, RECLAMO_SOLUCION, RECLAMO_CALIFICACION, RECLAMO_TIPO, PEDIDO_NRO, USUA_ID, RECLAMO_ESTADO,OPER_ID
	FROM gd_esquema.Maestra JOIN LOCKE.USUARIO ON (USUARIO_DNI = USUA_DNI) JOIN LOCKE.OPERADOR_RECLAMO ON (OPERADOR_RECLAMO_DNI = OPER_DNI AND OPERADOR_RECLAMO_APELLIDO = OPER_APELLIDO)
	WHERE RECLAMO_NRO IS NOT NULL);

	--CUPON RECLAMO
	INSERT INTO LOCKE.CUPON_RECLAMO(CUPO_RECL_CUPON,CUPO_RECL_MONTO,CUPO_RECL_FECHA_ALTA,CUPO_RECL_FECHA_VENCIMIENTO,CUPO_RECL_TIPO, CUPO_RECL_USUARIO,CUPO_RECL_RECLAMO)
	(SELECT CUPON_RECLAMO_NRO, CUPON_RECLAMO_MONTO, CUPON_RECLAMO_FECHA_ALTA, CUPON_RECLAMO_FECHA_VENCIMIENTO, CUPON_RECLAMO_TIPO, USUA_ID, RECLAMO_NRO
	FROM gd_esquema.Maestra JOIN LOCKE.USUARIO ON (USUARIO_DNI = USUA_DNI)
	WHERE CUPON_RECLAMO_NRO IS NOT NULL);

	--CUPON PEDIDO
		INSERT INTO LOCKE.CUPON_PEDIDO (CUPO_PEDI_CUPON, CUPO_PEDI_PEDIDO)
	(SELECT CUPON_NRO, PEDIDO_NRO FROM gd_esquema.Maestra
	WHERE CUPON_NRO IS NOT NULL AND PEDIDO_NRO IS NOT NULL);

	--CUPON RECLAMO PEDIDO
		INSERT INTO LOCKE.CUPON_RECLAMO_PEDIDO (CUPO_RECL_PEDI_CUPON, CUPO_RECL_PEDI_RECLAMO, CUPO_RECL_PEDI_PEDIDO)
	(SELECT CUPON_RECLAMO_NRO, RECLAMO_NRO, PEDIDO_NRO FROM gd_esquema.Maestra
	WHERE CUPON_RECLAMO_NRO IS NOT NULL AND PEDIDO_NRO IS NOT NULL);

	--PRODUCTO LOCAL
		INSERT INTO LOCKE.PRODUCTO_LOCAL (PROD_CODIGO,PROD_NOMBRE,PROD_DESCRIPCION,PROD_PRECIO_UNITARIO,PROD_LOCAL)
	(SELECT PRODUCTO_LOCAL_CODIGO, PRODUCTO_LOCAL_NOMBRE, PRODUCTO_LOCAL_DESCRIPCION, PRODUCTO_LOCAL_PRECIO, LOCAL_NOMBRE 
	FROM gd_esquema.Maestra
	WHERE PRODUCTO_LOCAL_CODIGO IS NOT NULL 
	GROUP BY  PRODUCTO_LOCAL_CODIGO, PRODUCTO_LOCAL_NOMBRE, PRODUCTO_LOCAL_DESCRIPCION, PRODUCTO_LOCAL_PRECIO, LOCAL_NOMBRE );

	--ITEM PEDIDO
	INSERT INTO LOCKE.ITEM_PEDIDO (ITEM_PEDIDO_NRO, ITEM_PRODUCTO,ITEM_LOCAL, ITEM_CANTIDAD, ITEM_PRECIO_UNITARIO)
	(SELECT PEDIDO_NRO,PRODUCTO_LOCAL_CODIGO,LOCAL_NOMBRE,SUM(PRODUCTO_CANTIDAD) AS PRODUCTO_CANTIDAD ,PRODUCTO_LOCAL_PRECIO FROM gd_esquema.Maestra
	WHERE PEDIDO_NRO IS NOT NULL AND PRODUCTO_LOCAL_CODIGO IS NOT NULL
	GROUP BY PEDIDO_NRO,PRODUCTO_LOCAL_CODIGO,LOCAL_NOMBRE,PRODUCTO_LOCAL_PRECIO);

END;
GO
EXEC MigrarDatos

